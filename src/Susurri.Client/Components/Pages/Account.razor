@page "/account"
@using Susurri.Client.Models
@using System.Text.Json
@using System.Text
@inject HttpClient Http

<MudThemeProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Susurri</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
            <MudNavLink Href="chat" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Chat</MudNavLink>
            <MudNavLink Href="account" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Account</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudForm Model="SignUp" OnValidSubmit="@SubmitForm">
                    <label for="Username">Username</label>
                    <MudTextField @bind-Value="SignUp.Username" Id="Username" Autocomplete="username"/>
                    
                    <label for="Password">Password</label>
                    <MudTextField @bind-Value="SignUp.Password" InputType="InputType.Password" Id="Password" Autocomplete="current-password"/>
                    <MudButton Type="Submit" Color="Color.Primary">Sign Up</MudButton>
        </MudForm>            
    </MudMainContent>
</MudLayout>

@if (_showSuccessMessage)
{
    <MudAlert Severity="Severity.Success">You are successfully signed up and logged in!</MudAlert>
}

@code {
    private bool _showSuccessMessage;
    private SignUpViewModel SignUp { get; set; } = new SignUpViewModel();

    private async Task SubmitForm()
    {
        var signUpJson = JsonSerializer.Serialize(SignUp);
        var signUpContent = new StringContent(signUpJson, Encoding.UTF8, "application/json");

        var response = await Http.PostAsync("https://localhost:7200/account", signUpContent);

        if (response.IsSuccessStatusCode)
        {
            _showSuccessMessage = true;
        }
        else
        {
            var errorResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {errorResponse}");
        }
    }
    
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}