@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@implements IAsyncDisposable

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

Messages from server

<ul>
    @foreach (var message in _messages)
    {
        <li>@message</li>
    }
</ul>
@code
{
    private HubConnection? _hubConnection;
    private readonly List<string> _messages = new();

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder().WithUrl("http://localhost:5044/Chat",
            o => o.AccessTokenProvider = () => Task.FromResult<string?>("eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6Ik1pY2hhIiwic3ViIjoiTWljaGEiLCJqdGkiOiI5MDJlOTA4ZCIsImF1ZCI6WyJodHRwOi8vbG9jYWxob3N0OjI1MjEzIiwiaHR0cHM6Ly9sb2NhbGhvc3Q6NDQzMDQiLCJodHRwOi8vbG9jYWxob3N0OjUwNDQiLCJodHRwczovL2xvY2FsaG9zdDo3MDgzIl0sIm5iZiI6MTcwOTU3MjgyNywiZXhwIjoxNzE3NTIxNjI3LCJpYXQiOjE3MDk1NzI4MjgsImlzcyI6ImRvdG5ldC11c2VyLWp3dHMifQ.OmIooqtE1L5s54As-ctb5FuBVZsrOL3NzKa-pZ0h4tw"))
            .Build();

        _hubConnection.On<string>("ReceiveNotification", message =>
        {
            _messages.Add(message);

            InvokeAsync(StateHasChanged);
        });

        await _hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection is not null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
}